<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="toy.recipit.mapper.RecipeMapper">

    <select id="getPopularRecipes" parameterType="map" resultType="toy.recipit.mapper.vo.PopularRecipeVo">
        SELECT
            R.RECIPE_NO AS recipeNo,
            R.TITLE     AS title,
            IMG.URL     AS imagePath,
            SUM(CASE WHEN L.LIKE_YN = 'Y' THEN 1 ELSE 0 END) AS likeCount,
            MAX(CASE WHEN L.USER_NO = #{userNo} AND L.LIKE_YN = 'Y' THEN 1 ELSE 0 END) AS isLiked
        FROM RC_WEEKLY W
                 INNER JOIN RC_RECIPE R
                            ON W.RECIPE_NO = R.RECIPE_NO
                 INNER JOIN RC_IMAGE IMG
                           ON R.RECIPE_NO = IMG.RECIPE_NO
                           AND IMG.TYPE_CODE = #{imageTypeCode}
                 LEFT JOIN RC_LIKE L
                           ON R.RECIPE_NO = L.RECIPE_NO
        WHERE W.RECOMMENDED_DATE = CURDATE()
        GROUP BY R.RECIPE_NO
        ORDER BY W.SORT_SEQUENCE
        LIMIT #{size}
    </select>

    <select id="getRecipeCount" resultType="int">
        SELECT COUNT(*)
        FROM RC_RECIPE
        WHERE USER_NO = #{userNo}
          AND STATUS_CODE = #{statusCode}
    </select>

    <select id="isRecipeExists" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM RC_RECIPE
            WHERE RECIPE_NO = #{recipeNo}
        )
    </select>

    <select id="isLikeExists" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM RC_LIKE
            WHERE USER_NO = #{userNo}
              AND RECIPE_NO = #{recipeNo}
        )
    </select>

    <update id="updateLike">
        UPDATE RC_LIKE
        SET LIKE_YN = #{likeYn},
            EDIT_DATETIME = NOW(),
            EDIT_USER = #{userNo}
        WHERE USER_NO = #{userNo}
          AND RECIPE_NO = #{recipeNo}
    </update>

    <insert id="insertLike">
        INSERT INTO RC_LIKE
        (
         USER_NO,
         RECIPE_NO,
         LIKE_YN,
         CREATE_DATETIME,
         CREATE_USER,
         EDIT_DATETIME,
         EDIT_USER
        )
        VALUES
            (
                #{userNo},
                #{recipeNo},
                #{likeYn},
                NOW(),
                #{userNo},
                NOW(),
                #{userNo}
            )
    </insert>

    <select id="getRecipes"
            resultType="toy.recipit.mapper.vo.SearchRecipeVo">
        SELECT
            R.RECIPE_NO        AS recipeNo,
            R.CATEGORY_CODE    AS categoryCode,
            R.TITLE            AS name,
            R.DESCRIPTION      AS description,
            IMG.URL            AS imageUrl,
            R.COOKING_TIME     AS cookingTime,
            R.DIFFICULTY_CODE  AS difficultyCode,
            DC.CODE_NAME       AS difficultyCodeName,
            COALESCE(SUM(CASE WHEN L.LIKE_YN = 'Y' THEN 1 ELSE 0 END), 0) AS likeCount,
        <choose>
            <when test="userNo != ''">
                MAX(
                    CASE
                        WHEN L.USER_NO = #{userNo} AND L.LIKE_YN = 'Y' THEN 1
                        ELSE 0
                    END
                )
            </when>
            <otherwise>
                0
            </otherwise>
        </choose> AS isLiked
        FROM RC_RECIPE R
            INNER JOIN RC_IMAGE IMG
                ON R.RECIPE_NO = IMG.RECIPE_NO
                AND IMG.TYPE_CODE = #{imageTypeCode}
            LEFT JOIN RC_LIKE L
                ON R.RECIPE_NO = L.RECIPE_NO
            INNER JOIN CM_DETAIL_CODE DC
                ON R.DIFFICULTY_CODE = DC.CODE
                AND DC.GROUP_CODE = #{difficultyGroupCode}
                AND DC.USE_YN = 'Y'
        <where>
            <if test="categoryCode != ''">
                R.CATEGORY_CODE = #{categoryCode}
            </if>
            <if test="keyword != ''">
                AND (
                    R.TITLE LIKE CONCAT('%', #{keyword}, '%')
                    OR R.DESCRIPTION LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        GROUP BY R.RECIPE_NO
        <choose>
            <when test="sortType == 'LIKE'">
                ORDER BY likeCount DESC, R.RECIPE_NO DESC
            </when>
            <otherwise>
                ORDER BY R.RECIPE_NO DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{size}
    </select>

    <select id="getRecipeCategories"
            resultType="toy.recipit.mapper.vo.CommonDetailCodeVo">
        SELECT DISTINCT
            CC.CODE      AS code,
            CC.CODE_NAME AS codeName,
            CC.NOTE_1    AS note1,
            CC.NOTE_2    AS note2,
            CC.NOTE_3    AS note3,
            CC.NOTE_4    AS note4
        FROM RC_RECIPE R
            INNER JOIN CM_DETAIL_CODE CC
                ON R.CATEGORY_CODE = CC.CODE
                AND CC.GROUP_CODE = #{categoryGroupCode}
                AND CC.USE_YN = 'Y'
        <where>
            <if test="keyword != ''">
                (R.TITLE LIKE CONCAT('%', #{keyword}, '%')
                OR R.DESCRIPTION LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        GROUP BY CC.CODE, CC.CODE_NAME
        ORDER BY CC.CODE
    </select>

    <insert id="insertRecipe" parameterType="toy.recipit.mapper.vo.InsertRecipeVo"
            useGeneratedKeys="true" keyProperty="recipeNo">
        INSERT INTO RC_RECIPE (
            USER_NO,
            TITLE,
            DESCRIPTION,
            CATEGORY_CODE,
            COOKING_TIME,
            SERVING_SIZE,
            DIFFICULTY_CODE,
            STATUS_CODE,
            LAST_NOTIFIED_LIKE_COUNT,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES (
            #{userNo},
            #{title},
            #{description},
            #{categoryCode},
            #{cookingTime},
            #{servingSize},
            #{difficultyCode},
            #{statusCode},
            0,
            NOW(),
            #{userNo},
            NOW(),
            #{userNo}
        )
    </insert>

    <insert id="insertDraftIngredients">
        INSERT INTO RC_INGREDIENT (
            RECIPE_NO,
            TYPE_CODE,
            NAME,
            QUANTITY,
            UNIT,
            TIP,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES
        <foreach collection="ingredientList" item="item" separator=",">
            (
                #{recipeNo},
                #{item.categoryCode},
                #{item.name},
                #{item.quantity},
                #{item.unit},
                #{item.tip},
                NOW(),
                #{userNo},
                NOW(),
                #{userNo}
            )
        </foreach>
    </insert>

    <insert id="insertUploadIngredients">
        INSERT INTO RC_INGREDIENT (
        RECIPE_NO,
        TYPE_CODE,
        NAME,
        QUANTITY,
        UNIT,
        TIP,
        CREATE_DATETIME,
        CREATE_USER,
        EDIT_DATETIME,
        EDIT_USER
        )
        VALUES
        <foreach collection="ingredientList" item="item" separator=",">
            (
            #{recipeNo},
            #{item.categoryCode},
            #{item.name},
            #{item.quantity},
            #{item.unit},
            #{item.tip},
            NOW(),
            #{userNo},
            NOW(),
            #{userNo}
            )
        </foreach>
    </insert>

    <insert id="insertRecipeImage">
        INSERT INTO RC_IMAGE (
            RECIPE_NO,
            URL,
            TYPE_CODE,
            SORT_SEQUENCE,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES (
            #{recipeNo},
            #{url},
            #{typeCode},
            #{sortSequence},
            NOW(),
            #{userNo},
            NOW(),
            #{userNo}
        )
    </insert>

    <insert id="insertStep" useGeneratedKeys="true" keyProperty="step.stepNo">
        INSERT INTO RC_STEP (
            RECIPE_NO,
            CONTENTS,
            SORT_SEQUENCE,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES (
            #{step.recipeNo},
            #{step.contents},
            #{step.sortSequence},
            NOW(),
            #{userNo},
            NOW(),
            #{userNo}
        )
    </insert>

    <insert id="insertStepImage">
        INSERT INTO RC_STEP_IMAGE (
            STEP_NO,
            URL,
            SORT_SEQUENCE,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES (
            #{stepNo},
            #{url},
            #{sortSequence},
            NOW(),
            #{userNo},
            NOW(),
            #{userNo}
        )
    </insert>

    <select id="getRecipeDetail" parameterType="map" resultMap="RecipeDetailMap">

        SELECT
        R.RECIPE_NO             AS recipeNo,
        U.NICK_NAME              AS nickname,
        R.TITLE                 AS title,
        R.DESCRIPTION           AS description,
        R.COOKING_TIME          AS cookingTime,
        R.SERVING_SIZE          AS servingSize,
        DC.CODE_NAME            AS difficulty,
        SUM(CASE WHEN L.LIKE_YN = 'Y' THEN 1 ELSE 0 END)     AS likeCount,
        R.STATUS_CODE           AS statusCode,
        SC.CODE_NAME            AS statusName,

        CASE
            WHEN I.TYPE_CODE = #{thumbnailImageCode}
                THEN I.URL
        END AS mainImagePath,

        MAX(
            CASE
                WHEN L.USER_NO = #{userNo}
                    AND L.LIKE_YN = 'Y'
                    THEN 'Y'
                ELSE 'N'
            END
        ) AS likeYn,

        MAX(CASE
                WHEN B.USER_NO = #{userNo}
                    THEN 'Y'
                ELSE 'N'
            END
        ) AS bookmarkYn,

        MAX(
            CASE
                WHEN RP.USER_NO = #{userNo}
                    THEN 'Y'
                ELSE 'N'
            END
        ) AS reportYn

        FROM RC_RECIPE R
            INNER JOIN US_USER U
                ON U.USER_NO = R.USER_NO
            INNER JOIN CM_DETAIL_CODE DC
                ON DC.CODE = R.DIFFICULTY_CODE
                AND DC.GROUP_CODE = #{difficultyGroupCode}
                AND DC.USE_YN = 'Y'
            INNER JOIN CM_DETAIL_CODE SC
                ON SC.CODE = R.STATUS_CODE
                AND SC.GROUP_CODE = #{recipeStatusGroupCode}
                AND SC.USE_YN = 'Y'
            LEFT JOIN RC_IMAGE I
                ON I.RECIPE_NO = R.RECIPE_NO
                AND I.TYPE_CODE = #{thumbnailImageCode}
            LEFT JOIN RC_LIKE L
                ON L.RECIPE_NO = R.RECIPE_NO
            LEFT JOIN RC_BOOKMARK_RECIPE B
                ON B.RECIPE_NO = R.RECIPE_NO
                AND B.USER_NO = #{userNo}
            LEFT JOIN RC_REPORT RP
                ON RP.RECIPE_NO = R.RECIPE_NO
                AND RP.USER_NO = #{userNo}
        WHERE R.RECIPE_NO = #{recipeNo}
    </select>

    <select id="getCompletionImages"
            parameterType="string"
            resultType="string">
        SELECT
            URL
        FROM RC_IMAGE
        WHERE RECIPE_NO = #{recipeNo}
          AND TYPE_CODE = 'IM03'
        ORDER BY SORT_SEQUENCE
    </select>

    <resultMap id="RecipeDetailMap" type="toy.recipit.mapper.vo.RecipeDetailVo">
        <id     property="recipeNo" column="recipeNo"/>
        <result property="nickname" column="nickname"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="cookingTime" column="cookingTime"/>
        <result property="servingSize" column="servingSize"/>
        <result property="difficulty" column="difficulty"/>
        <result property="likeCount" column="likeCount"/>
        <result property="statusCode" column="statusCode"/>
        <result property="statusName" column="statusName"/>
        <result property="mainImagePath" column="mainImagePath"/>
        <result property="likeYn" column="likeYn"/>
        <result property="bookmarkYn" column="bookmarkYn"/>
        <result property="reportYn" column="reportYn"/>

        <collection property="completionImagePathList"
                    column="recipeNo"
                    select="getCompletionImages"/>
    </resultMap>

    <select id="getIngredients" resultType="toy.recipit.mapper.vo.IngredientVo">

        SELECT
            I.NAME           AS name,
            I.TYPE_CODE      AS categoryCode,
            I.QUANTITY       AS quantity,
            I.UNIT           AS unit,
            I.TIP            AS tip
        FROM RC_INGREDIENT I
        WHERE I.RECIPE_NO = #{recipeNo}
        ORDER BY I.INGREDIENT_NO
    </select>

    <select id="getSteps" resultMap="StepMap">

        SELECT
            S.STEP_NO     AS stepNo,
            S.CONTENTS    AS content
        FROM RC_STEP S
        WHERE S.RECIPE_NO = #{recipeNo}
        ORDER BY S.STEP_NO
    </select>

    <select id="getStepImages" resultType="string">
        SELECT
            SI.URL
        FROM RC_STEP_IMAGE SI
        WHERE SI.STEP_NO = #{stepNo}
        ORDER BY SI.SORT_SEQUENCE
    </select>

    <resultMap id="StepMap" type="toy.recipit.mapper.vo.StepVo">
        <result property="content" column="content"/>

        <collection property="imagePathList"
                    column="stepNo"
                    select="getStepImages"/>
    </resultMap>

    <insert id="insertBookmark">
        INSERT INTO RC_BOOKMARK_RECIPE
        (
            USER_NO,
            RECIPE_NO,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES
            (
                #{userNo},
                #{recipeNo},
                NOW(),
                #{userNo},
                NOW(),
                #{userNo}
            )
    </insert>

    <delete id="deleteBookmark">
        DELETE FROM RC_BOOKMARK_RECIPE
        WHERE USER_NO = #{userNo}
          AND RECIPE_NO = #{recipeNo}
    </delete>

    <select id="isPreferCategoriesExists" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM RC_PREFER_CATEGORY
            WHERE USER_NO = #{userNo}
        )
    </select>

    <insert id="insertPreferCategories">
        INSERT INTO RC_PREFER_CATEGORY (
            CATEGORY_CODE,
            USER_NO,
            STATUS_CODE,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        SELECT
            CODE AS CATEGORY_CODE,
            #{userNo},
            #{defaultStatusCode},
            NOW(),
            #{userNo},
            NOW(),
            #{userNo}
        FROM CM_DETAIL_CODE
        WHERE GROUP_CODE = #{categoryGroupCode}
    </insert>

    <select id="getPreferenceCategories" resultType="toy.recipit.mapper.vo.PreferCategoryVo">
        SELECT
            C.CODE AS categoryCode,
            C.CODE_NAME AS categoryName,
            P.STATUS_CODE AS statusCode,
            S.CODE_NAME AS statusName,
            C.NOTE_1 AS iconUrl
        FROM RC_PREFER_CATEGORY P
                 INNER JOIN CM_DETAIL_CODE C
                           ON C.GROUP_CODE = #{categoryGroupCode}
                               AND C.CODE = P.CATEGORY_CODE
                 INNER JOIN CM_DETAIL_CODE S
                           ON S.GROUP_CODE = #{statusGroupCode}
                               AND S.CODE = P.STATUS_CODE
        WHERE P.USER_NO = #{userNo}
        ORDER BY C.SORT_SEQUENCE
    </select>

    <update id="changePreferenceCategoryStatus">
        UPDATE RC_PREFER_CATEGORY
        SET STATUS_CODE = #{statusCode}
        WHERE CATEGORY_CODE = #{categoryCode}
          AND USER_NO = #{userNo}
    </update>

    <select id="getUserLikeCount" resultType="int">
        SELECT
            COUNT(L.RECIPE_NO) AS total_like_count
        FROM RC_RECIPE R
                 INNER JOIN RC_LIKE L
                      ON R.RECIPE_NO = L.RECIPE_NO
                          AND L.LIKE_YN = 'Y'
        WHERE R.USER_NO = #{userNo}
          AND R.STATUS_CODE = #{statusCode};
    </select>

    <select id="getUserBookmarkCount" resultType="int">
        SELECT COUNT(*)
        FROM RC_BOOKMARK_RECIPE
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getUserRecipes" resultType="toy.recipit.mapper.vo.SearchRecipeVo">
        SELECT
            R.RECIPE_NO        AS recipeNo,
            R.CATEGORY_CODE    AS categoryCode,
            R.TITLE            AS name,
            R.DESCRIPTION      AS description,
            IMG.URL            AS imageUrl,
            R.COOKING_TIME     AS cookingTime,
            R.DIFFICULTY_CODE  AS difficultyCode,
            DC.CODE_NAME       AS difficultyCodeName,
            SUM(CASE WHEN L.LIKE_YN = 'Y' THEN 1 ELSE 0 END) AS likeCount,
            MAX(CASE WHEN L.USER_NO = #{userNo} AND L.LIKE_YN = 'Y' THEN 1 ELSE 0 END) AS isLiked
        FROM RC_RECIPE R
            INNER JOIN RC_IMAGE IMG
                ON R.RECIPE_NO = IMG.RECIPE_NO
                    AND IMG.TYPE_CODE = #{imageTypeCode}
            LEFT JOIN RC_LIKE L
                ON R.RECIPE_NO = L.RECIPE_NO
            INNER JOIN CM_DETAIL_CODE DC
                ON R.DIFFICULTY_CODE = DC.CODE
                    AND DC.GROUP_CODE = #{difficultyGroupCode}
                    AND DC.USE_YN = 'Y'
        WHERE R.USER_NO = #{userNo}
            AND R.STATUS_CODE = #{statusCode}
        GROUP BY R.RECIPE_NO
        LIMIT #{offset}, #{size}
    </select>

    <update id="updateRecipeStatus">
        UPDATE RC_RECIPE
        SET STATUS_CODE = #{statusCode}
        WHERE RECIPE_NO = #{recipeNo}
          AND USER_NO = #{userNo}
    </update>

    <select id="getDraftRecipes" resultType="toy.recipit.mapper.vo.UserDraftRecipeVo">
        SELECT
            R.RECIPE_NO        AS recipeNo,
            R.TITLE            AS name,
            R.DESCRIPTION      AS description,
            IMG.URL            AS imageUrl,
            R.COOKING_TIME     AS cookingTime,
            DC.CODE_NAME       AS difficultyCodeName
        FROM RC_RECIPE R
                 LEFT JOIN RC_IMAGE IMG
                            ON R.RECIPE_NO = IMG.RECIPE_NO
                                AND IMG.TYPE_CODE = #{imageTypeCode}
                 INNER JOIN CM_DETAIL_CODE DC
                            ON R.DIFFICULTY_CODE = DC.CODE
                                AND DC.GROUP_CODE = #{difficultyGroupCode}
                                AND DC.USE_YN = 'Y'
        WHERE R.USER_NO = #{userNo}
          AND R.STATUS_CODE = #{statusCode}
        GROUP BY R.RECIPE_NO
    </select>

    <select id="isRecentRecipeExists" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM RC_RECENT_RECIPE
            WHERE USER_NO = #{userNo}
              AND RECIPE_NO = #{recipeNo}
        )
    </select>

    <insert id="insertRecentRecipe">
        INSERT INTO RC_RECENT_RECIPE
        (
            USER_NO,
            RECIPE_NO,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES
            (
                #{userNo},
                #{recipeNo},
                NOW(),
                #{userNo},
                NOW(),
                #{userNo}
            )
    </insert>

    <update id="updateRecentRecipe">
        UPDATE RC_RECENT_RECIPE
        SET EDIT_DATETIME = NOW()
        WHERE USER_NO = #{userNo}
          AND RECIPE_NO = #{recipeNo}
    </update>

    <select id="getRecentRecipes" resultType="toy.recipit.mapper.vo.SearchRecipeVo">
        SELECT
            R.RECIPE_NO              AS recipeNo,
            R.CATEGORY_CODE          AS categoryCode,
            R.TITLE                  AS name,
            R.DESCRIPTION            AS description,
            IMG.URL                  AS imageUrl,
            R.COOKING_TIME           AS cookingTime,
            R.DIFFICULTY_CODE        AS difficultyCode,
            DC.CODE_NAME             AS difficultyCodeName,
            COALESCE(SUM(CASE WHEN L.LIKE_YN = 'Y' THEN 1 ELSE 0 END), 0) AS likeCount,
            MAX(CASE WHEN L.USER_NO = #{userNo} AND L.LIKE_YN = 'Y' THEN 1 ELSE 0 END) AS isLiked
        FROM RC_RECENT_RECIPE RE
                 INNER JOIN RC_RECIPE R
                            ON RE.RECIPE_NO = R.RECIPE_NO
                 INNER JOIN RC_IMAGE IMG
                            ON R.RECIPE_NO = IMG.RECIPE_NO
                                AND IMG.TYPE_CODE = #{imageTypeCode}
                 LEFT JOIN RC_LIKE L
                           ON R.RECIPE_NO = L.RECIPE_NO
                 INNER JOIN CM_DETAIL_CODE DC
                            ON R.DIFFICULTY_CODE = DC.CODE
                                AND DC.GROUP_CODE = #{difficultyGroupCode}
                                AND DC.USE_YN = 'Y'
        WHERE RE.USER_NO = #{userNo}
          AND R.STATUS_CODE = #{statusCode}
        GROUP BY R.RECIPE_NO, RE.EDIT_DATETIME
        ORDER BY RE.EDIT_DATETIME DESC
        LIMIT #{size}
    </select>
</mapper>