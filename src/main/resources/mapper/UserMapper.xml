<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="toy.recipit.mapper.UserMapper">

    <select id="isNicknameDuplicate" parameterType="string" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM US_USER
            WHERE NICK_NAME = #{nickname}
        )
    </select>

    <select id="isEmailExists" parameterType="string" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM US_USER
            WHERE EMAIL_HASHING = #{emailHashing}
        )
    </select>


    <select id="isNameAndPhoneNumberExists" parameterType="map" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM US_USER
            WHERE FIRST_NAME = #{firstName}
              AND MIDDLE_NAME = #{middleName}
              AND LAST_NAME = #{lastName}
              AND PHONE_NUMBER_HASHING = #{phoneNumberHashing}
        )
    </select>


    <insert id="insertUser" parameterType="map">
        INSERT INTO US_USER
        (
            EMAIL_HASHING,
            EMAIL_ENCRYPT,
            NICK_NAME,
            PASSWORD,
            LAST_NAME,
            MIDDLE_NAME,
            FIRST_NAME,
            PHONE_NUMBER_HASHING,
            PHONE_NUMBER_ENCRYPT,
            COUNTRY_CODE,
            LOGIN_FAIL_COUNT,
            STATUS_CODE,
            CREATE_DATETIME,
            CREATE_USER,
            EDIT_DATETIME,
            EDIT_USER
        )
        VALUES
            (
                #{user.emailHashing},
                #{user.emailEncrypt},
                #{user.nickName},
                #{user.password},
                #{user.lastName},
                #{user.middleName},
                #{user.firstName},
                #{user.phoneNumberHashing},
                #{user.phoneNumberEncrypt},
                #{user.countryCode},
                #{user.loginFailCount},
                #{user.statusCode},
                NOW(),
                #{user.createUser},
                NOW(),
                #{user.editUser}
            )
    </insert>

    <select id="getUserByEmail" parameterType="String" resultType="toy.recipit.mapper.vo.UserVo">
        SELECT USER_NO,
               EMAIL_HASHING,
               EMAIL_ENCRYPT,
               NICK_NAME,
               PASSWORD,
               FIRST_NAME,
               MIDDLE_NAME,
               LAST_NAME,
               COUNTRY_CODE,
               PHONE_NUMBER_HASHING,
               PHONE_NUMBER_ENCRYPT,
               LOGIN_FAIL_COUNT,
               STATUS_CODE
        FROM US_USER
        WHERE EMAIL_HASHING = #{emailHashing}
    </select>

    <select id="getUserByUserNo" parameterType="String" resultType="toy.recipit.mapper.vo.UserVo">
        SELECT USER_NO,
               EMAIL_HASHING,
               EMAIL_ENCRYPT,
               NICK_NAME,
               PASSWORD,
               FIRST_NAME,
               MIDDLE_NAME,
               LAST_NAME,
               COUNTRY_CODE,
               PHONE_NUMBER_HASHING,
               PHONE_NUMBER_ENCRYPT,
               LOGIN_FAIL_COUNT,
               STATUS_CODE
        FROM US_USER
        WHERE USER_NO = #{userNo}
    </select>

    <update id="increaseLoginFailCount">
        UPDATE US_USER
        SET LOGIN_FAIL_COUNT = LOGIN_FAIL_COUNT + 1,
            EDIT_DATETIME = NOW(),
            EDIT_USER = #{updateId}
        WHERE EMAIL_HASHING = #{emailHashing}
    </update>


    <update id="updateStatusCode">
        UPDATE US_USER
        SET STATUS_CODE = #{statusCode},
            EDIT_DATETIME = NOW(),
            EDIT_USER = #{updateId}
        WHERE EMAIL_HASHING = #{emailHashing}
    </update>

    <update id="resetLoginFailCount">
        UPDATE US_USER
        SET LOGIN_FAIL_COUNT = 0,
            EDIT_DATETIME = NOW(),
            EDIT_USER = #{updateId}
        WHERE EMAIL_HASHING = #{emailHashing}
    </update>
</mapper>